
struct BinTextureReader{
	
	ivec2 size;
	int channelCount;
	
	sampler2D data;
	
	float readFloat(int &pos){
		return readValue(data, pos++, size.x, size.h, channelCount);
	}
	vec2 readVec2(int &pos){
		return vec2(readFloat(pos),readFloat(pos));
	}
	vec3 readVec3(int &pos){
		return vec3(readVec2(pos),readFloat(pos));
	}
	vec4 readVec4(int &pos){
		return vec4(readVec3(pos),readFloat(pos));
	}
	
};

float readValue(sampler2D data, int pos, int width, int height, int channelCount){
	
	int pixelId=pos/channelCount;
	if(pixelId>width*height)return -1;
	
	int whatInPixel=pos%channelCount;
	
	float x=pixelId%width;
	float y=pixelId/width;
	
	return texture(data, vec2(x/width,y/height))[whatInPixel];
}